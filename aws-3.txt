Experience in setting up the enterprise infrastructure on Amazon Web Services (AWS). Working with broad range of AWS cloud services and it's features like Auto Scaling, ELB, VPC, Security Groups, Route53, RDS, S3, IAM, SNS, SES, SQS, Cloud Front, Elastic Beanstalk, DynamoDB, AWS Lambda.
Designed, configured and deployed Amazon Web Services (AWS) for a multitude of applications utilizing the AWS stack (Including EC2, VPC, Glacier, Route53, S3, RDS, Cloud watch, Cloud Trial, SNS and IAM), focusing on high - availability, fault tolerance, and auto-scaling in AWS cloud formation.
Involved in designing and deploying a multitude application utilizing almost all the AWS stack (including EC2, Route 53, S3, RDS, Dynamo DB, SNS, SQS, IAM) focusing on high-availability, fault tolerance, and auto scaling in AWS Cloud Formation.
Hands-on experience in Azure Cloud Services (PaaS & IaaS), Storage, Web Apps, Active Directory, Azure Container Service, VPN Gateway, Content Delivery Management, Traffic Manager, Azure Monitoring, OMS, Key Vault, Visual Studio Online (VSO), Cognitive Services (LUIS) and SQL Azure.
Experience in integrating Jenkins with various tools like Maven (Build tool), Git (Repository), SonarQube (code verification), Nexus (Artifactory) and implementing CI/CD automation for creating Jenkins pipelines programmatically architecting Jenkins Clusters.
Utilized Cloud Watch to monitor resources such as EC2, CPU memory, Amazon RDS DB services, Dynamo DB tables, Elastic Block Store ( EBS) volumes to set alarms for notification or automated actions; and to monitor logs for a better understanding and operation of the system.
Designed and implemented scalable, secure cloud architecture based on Amazon Web Services. Leveraged AWS cloud services such as EC2; auto-scaling; and VPC (Virtual Private Cloud) to build secure, highly scalable and flexible systems that handled expected and unexpected load bursts, and can quickly evolve during development iterations. designing and deploying AWS Solutions using EC2, S3, EBS, Elastic Load balancer (ELB), auto-scaling groups and OpsWorks.
Extensive experience in studying the existing infrastructure landscape, cloud product matching, design cloud architecture, proof of concepts, design improvements and implementation of AWS Cloud Infrastructure recommending application migrations to public vs private cloud.
Worked on Lambda functions that aggregates the data from incoming events, then stored result data in Amazon DynamoDB. This function also sends data to CloudWatch for simple monitoring of metrices. 

Responsible for design and maintenance of the GIT Repositories, different branching & merging strategies, views, access control strategies and Integrated GIT into Jenkins to automate the code check-out process.
Implemented and maintained the monitoring, alerting of production and corporate servers using CloudWatch and used ELK (Elastic Search, Logstash, Kibana) for application logs. 
Used Cloud Front to deliver content from AWS edge locations to users, allowing for further reduction of load on front-end servers.
Experience in setting up and managing ELK (Elastic Search, Log Stash & Kibana) Stack to collect, search and analyze logfiles across servers, log monitoring and created geo-mapping visualizations using Kibana in integration with AWS CloudWatch and Lambda.

Designed, configured and managed public/private cloud infrastructures utilizing Amazon Web Services (AWS)including EC2, Auto - Scaling in launching EC2 instances, Elastic Load Balancer, Elastic Beanstalk, AWS Lambda, S3, Glacier, Cloud Front, RDS, VPC, Direct Connect, Route53, Cloud Watch, Cloud Formation, IAM, SNS.
